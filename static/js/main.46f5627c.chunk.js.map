{"version":3,"sources":["index.js"],"names":["ans","nines","ReactDOM","render","prop","React","useState","password","output","showPassword","values","setValues","Fragment","style","padding","container","direction","justify","alignItems","spacing","item","xs","variant","htmlFor","id","type","value","onChange","event","target","split","forEach","element","match","isNaN","index","triad","subElement","newChar","toUpperCase","digit","parseInt","labelWidth","gutterBottom","document","querySelector"],"mappings":"mdAeA,IAAMA,EAAM,CACV,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,MAGFC,EAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KA8GvDC,IAASC,OAAO,kBA5GhB,WAAgB,IAOOC,EAPR,EACeC,IAAMC,SAAS,CACzCC,SAAU,GACVC,OAAQ,GACRC,cAAc,IAJH,mBACNC,EADM,KACEC,EADF,KAwDb,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CACEC,MAAO,CAELC,QAAS,QAGX,kBAAC,IAAD,CACEC,WAAS,EACTC,UAAU,SACVC,QAAQ,SACRC,WAAW,SACXC,QAAS,GAET,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CAAaC,QAAQ,YACnB,kBAAC,IAAD,CAAYC,QAAQ,+BAApB,WAGA,kBAAC,IAAD,CACEC,GAAG,8BACHC,KAAMf,EAAOD,aAAe,OAAS,WACrCiB,MAAOhB,EAAOH,SACdoB,UAzEOvB,EAyEgB,WAzER,SAAAwB,GAAU,IAAD,EAChCpB,EAAS,GACHoB,EAAMC,OAAOH,MAAMI,MAAM,IAC/BC,QAAQ,SAAAC,GACV,IAAIC,GAAQ,EACZ,GAAIC,MAAMF,GAAU,CAClB,IAAIG,EAAQ,EACZnC,EAAI+B,QAAQ,SAAAK,GACVA,EAAML,QAAQ,SAAAM,GACZ,IAAIC,EAAU,GAEVN,GAAWK,GACbC,EAAUH,EACVF,GAAQ,GAEDD,GAAWK,EAAWE,gBAC7BD,EAAUN,EACVC,GAAQ,GAGVzB,GAAkB8B,IAEpBH,MAGEF,IACFzB,GAAkBwB,OACf,CACL,IAAIQ,EAAQC,SAAST,GACjBQ,EAAQ,IAAGA,EAAQvC,EAAMuC,EAAQ,IACrChC,GAAkBgC,KAItB7B,E,qWAAU,CAAD,GACJD,GADI,mBAENN,EAAOwB,EAAMC,OAAOH,OAFd,uBAGPlB,GAHO,OAoDGkC,WAAY,OAIlB,kBAAC,IAAD,CAAMtB,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CAAYC,QAAQ,UAAUqB,cAAY,GACvCjC,EAAOF,aASN,MAASoC,SAASC,cAAc,Y","file":"static/js/main.46f5627c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"typeface-roboto\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst ans = [\r\n  [\"f\", \"o\", \"x\"],\r\n  [\"a\", \"b\", \"c\"],\r\n  [\"d\", \"e\", \"g\"],\r\n  [\"h\", \"i\", \"j\"],\r\n  [\"k\", \"l\", \"m\"],\r\n  [\"n\", \"p\", \"q\"],\r\n  [\"r\", \"s\", \"t\"],\r\n  [\"u\", \"v\", \"w\"],\r\n  [\"y\", \"z\"]\r\n];\r\n\r\nconst nines = [\"w\", \"a\", \"r\", \"e\", \"v\", \"o\", \"t\", \"c\", \"h\"];\r\n\r\nfunction App() {\r\n  const [values, setValues] = React.useState({\r\n    password: \"\",\r\n    output: \"\",\r\n    showPassword: true\r\n  });\r\n\r\n  const handleChange = prop => event => {\r\n    let output = \"\";\r\n    let arr = event.target.value.split(\"\");\r\n    arr.forEach(element => {\r\n      let match = false\r\n      if (isNaN(element)) {\r\n        let index = 1;\r\n        ans.forEach(triad => {\r\n          triad.forEach(subElement => {\r\n            let newChar = \"\"\r\n            \r\n            if (element == subElement){ \r\n              newChar = index;\r\n              match = true\r\n            }\r\n            else if (element == subElement.toUpperCase()) {\r\n              newChar = element;\r\n              match = true\r\n            }\r\n\r\n            output = output + newChar\r\n          });\r\n          index++;\r\n        });\r\n\r\n        if(!match)\r\n          output = output + element\r\n      } else {\r\n        let digit = parseInt(element);\r\n        if (digit > 0) digit = nines[digit - 1];\r\n        output = output + digit;\r\n      }\r\n    });\r\n\r\n    setValues({\r\n      ...values,\r\n      [prop]: event.target.value,\r\n      output\r\n    });\r\n  };\r\n\r\n  // const handleClickShowPassword = () => {\r\n  //   setValues({ ...values, showPassword: !values.showPassword });\r\n  // };\r\n\r\n  // const handleMouseDownPassword = event => {\r\n  //   event.preventDefault();\r\n  // };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container\r\n        style={{\r\n          // backgroundColor: \"hotpink\",\r\n          padding: \"10%\"\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <FormControl variant=\"outlined\">\r\n              <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                Keyword\r\n              </InputLabel>\r\n              <OutlinedInput\r\n                id=\"outlined-adornment-password\"\r\n                type={values.showPassword ? \"text\" : \"password\"}\r\n                value={values.password}\r\n                onChange={handleChange(\"password\")}\r\n                // endAdornment={\r\n                //   <InputAdornment position=\"end\">\r\n                //     <IconButton\r\n                //     aria-label=\"toggle password visibility\"\r\n                //     onClick={handleClickShowPassword}\r\n                //     onMouseDown={handleMouseDownPassword}\r\n                //     edge=\"end\"\r\n                //   >\r\n                //     {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                //   </IconButton>\r\n                //   </InputAdornment>\r\n                // }\r\n                labelWidth={70}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"caption\" gutterBottom>\r\n              {values.output}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}